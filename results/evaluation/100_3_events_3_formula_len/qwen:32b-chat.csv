context,query,code,answer,prediction
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen. After event3, event1 will happen.","C1: The case of that event1 happened or the case of that event2 happened, is ture.
C2: The case of C1 or the case of that event3 happened, is ture.
C2 is true.

Determine whether the case C2 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
		state = event3 : event1;
    esac;
LTLSPEC (((state=event1) | (state=event2)) | (state=event3))
",True,True
"Initially, event2 is happened. After event2, no other events will happen. After event1, event2 will happen. After event3, no other events will happen.","C1: event1 will always happen at any future time.
C2: The case of that event1 happened or the case of C1, is ture.
C3: C2 is not true.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
		state = event3 : event3;
    esac;
LTLSPEC (! ((state=event1) | (G (state=event1))))
",True,False
"Initially, event2 is happened. After event1, event2 will happen. After event1, event3 will happen. After event2, event1 will happen. After event3, event1 will happen.","C1: The case of that event2 happened implies the case of that event2 happened, is true.
C2: C1 will happen eventually.
C3: C2 will happen at next time.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event1 : event3;
		state = event2 : event1;
		state = event3 : event1;
    esac;
LTLSPEC (X (F ((state=event2) -> (state=event2))))
",True,False
"Initially, event2 is happened. After event2, event1 will happen. After event2, event3 will happen. After event1, event2 will happen. After event1, event3 will happen. After event3, no other events will happen. After event3, no other events will happen.","C1: event1 will happen eventually.
C2: C1 is not true.
C3: The case of C2 and the case of that event1 happened, is true.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event1 : event3;
		state = event2 : event1;
		state = event2 : event3;
		state = event3 : event3;
    esac;
LTLSPEC ((! (F (state=event1))) & (state=event1))
",False,False
"Initially, event3 is happened. After event2, event1 will happen. After event2, event3 will happen. After event1, event3 will happen. After event3, event1 will happen. After event3, event1 will happen.","C1: The case of that event1 happened or the case of that event3 happened, is ture.
C2: The case of C1 or the case of that event1 happened, is ture.
C3: C2 is not true.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event1 : event3;
		state = event2 : event1;
		state = event2 : event3;
		state = event3 : event1;
    esac;
LTLSPEC (! (((state=event1) | (state=event3)) | (state=event1)))
",False,False
"Initially, event2 is happened. After event2, event3 will happen. After event3, event1 will happen. After event1, event3 will happen.","C1: event3 will always happen at any future time.
C2: The case of that event3 happened or the case of C1, is ture.
C2 is true.

Determine whether the case C2 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event3;
		state = event2 : event3;
		state = event3 : event1;
    esac;
LTLSPEC ((state=event3) | (G (state=event3)))
",False,True
"Initially, event2 is happened. After event3, event1 will happen. After event1, event3 will happen. After event2, event3 will happen.","C1: event2 will happen at next time.
C2: The case of C1 implies the case of that event2 happened, is true.
C2 is true.

Determine whether the case C2 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event3;
		state = event2 : event3;
		state = event3 : event1;
    esac;
LTLSPEC ((X (state=event2)) -> (state=event2))
",True,True
"Initially, event1 is happened. After event1, event3 will happen. After event3, event1 will happen. After event3, event2 will happen. After event2, event1 will happen. After event2, event3 will happen.","C1: The case of that event3 happened or the case of that event3 happened, is ture.
C2: C1 will happen eventually.
C2 is true.

Determine whether the case C2 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event3;
		state = event2 : event1;
		state = event2 : event3;
		state = event3 : event1;
		state = event3 : event2;
    esac;
LTLSPEC (F ((state=event3) | (state=event3)))
",True,True
"Initially, event2 is happened. After event2, event3 will happen. After event3, no other events will happen. After event1, event2 will happen.","C1: event2 will happen eventually.
C2: C1 will happen at next time.
C3: The case of that event2 happened and the case of C2, is true.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event3;
		state = event3 : event3;
    esac;
LTLSPEC ((state=event2) & (X (F (state=event2))))
",False,True
"Initially, event3 is happened. After event3, event1 will happen. After event1, no other events will happen. After event2, event1 will happen. After event2, event3 will happen.","C1: The case of that event1 happened implies the case of that event2 happened, is true.
C2: C1 will happen at next time.
C3: The case of that event2 happened or the case of C2, is ture.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event2 : event1;
		state = event2 : event3;
		state = event3 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event2) | (X ((state=event1) -> (state=event2))))
",False,True
"Initially, event2 is happened. After event2, event1 will happen. After event1, no other events will happen. After event3, no other events will happen.","C1: The case of that event1 happened and the case of that event2 happened, is true.
C2: C1 will happen at next time.
C2 is true.

Determine whether the case C2 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
		state = event3 : event3;
    esac;
LTLSPEC (X ((state=event1) & (state=event2)))
",False,False
"Initially, event1 is happened. After event1, event2 will happen. After event1, event3 will happen. After event2, event3 will happen. After event3, event1 will happen. After event3, event1 will happen.","C1: the case of that event2 happened is not true.
C2: C1 will happen eventually.
C3: C2 will always happen at any future time.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event1 : event3;
		state = event2 : event3;
		state = event3 : event1;
    esac;
LTLSPEC (G (F (! (state=event2))))
",True,False
"Initially, event3 is happened. After event3, event2 will happen. After event2, event3 will happen. After event1, no other events will happen.","C1: The case of that event1 happened or the case of that event3 happened, is ture.
C2: The case of C1 and the case of that event2 happened, is true.
C3: C2 will happen eventually.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event2 : event3;
		state = event3 : event2;
		state = event1 : event1;
    esac;
LTLSPEC (F (((state=event1) | (state=event3)) & (state=event2)))
",False,True
"Initially, event1 is happened. After event3, no other events will happen. After event2, event1 will happen. After event1, event2 will happen.","C1: the case of that event1 happened is not true.
C2: the case of that event1 happened is not true.
C3: The case of C1 or the case of C2, is ture.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
		state = event3 : event3;
    esac;
LTLSPEC ((! (state=event1)) | (! (state=event1)))
",False,True
"Initially, event3 is happened. After event3, event1 will happen. After event3, event2 will happen. After event1, event2 will happen. After event2, no other events will happen. After event2, no other events will happen.","C1: event3 will always happen at any future time.
C2: C1 will happen eventually.
C3: The case of that event1 happened implies the case of C2, is true.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event1 : event2;
		state = event3 : event1;
		state = event3 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) -> (F (G (state=event3))))
",True,True
"Initially, event3 is happened. After event1, event3 will happen. After event3, event1 will happen. After event2, event1 will happen. After event2, event3 will happen.","C1: The case of that event1 happened implies the case of that event3 happened, is true.
C2: The case of C1 and the case of that event2 happened, is true.
C2 is true.

Determine whether the case C2 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event1 : event3;
		state = event2 : event1;
		state = event2 : event3;
		state = event3 : event1;
    esac;
LTLSPEC (((state=event1) -> (state=event3)) & (state=event2))
",False,True
"Initially, event3 is happened. After event2, no other events will happen. After event1, event3 will happen. After event3, event2 will happen.","C1: The case of that event3 happened or the case of that event1 happened, is ture.
C2: C1 is not true.
C2 is true.

Determine whether the case C2 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event1 : event3;
		state = event3 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (! ((state=event3) | (state=event1)))
",False,False
"Initially, event3 is happened. After event1, event3 will happen. After event3, event2 will happen. After event2, event3 will happen.","C1: The case of that event3 happened or the case of that event2 happened, is ture.
C2: C1 will happen eventually.
C3: C2 will happen eventually.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event1 : event3;
		state = event2 : event3;
		state = event3 : event2;
    esac;
LTLSPEC (F (F ((state=event3) | (state=event2))))
",True,True
"Initially, event3 is happened. After event3, no other events will happen. After event2, no other events will happen. After event1, no other events will happen.","C1: event2 will always happen at any future time.
C2: C1 will happen at next time.
C3: C2 will happen eventually.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event2 : event2;
		state = event1 : event1;
		state = event3 : event3;
    esac;
LTLSPEC (F (X (G (state=event2))))
",False,True
"Initially, event2 is happened. After event3, event1 will happen. After event3, event2 will happen. After event1, event2 will happen. After event1, event3 will happen. After event2, event1 will happen. After event2, event1 will happen.","C1: The case of that event1 happened or the case of that event2 happened, is ture.
C2: The case of C1 implies the case of that event2 happened, is true.
C2 is true.

Determine whether the case C2 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event1 : event3;
		state = event2 : event1;
		state = event3 : event1;
		state = event3 : event2;
    esac;
LTLSPEC (((state=event1) | (state=event2)) -> (state=event2))
",True,True
"Initially, event3 is happened. After event3, event2 will happen. After event2, event1 will happen. After event2, event3 will happen. After event1, event2 will happen.","C1: The case of that event3 happened implies the case of that event2 happened, is true.
C2: The case of that event3 happened or the case of C1, is ture.
C2 is true.

Determine whether the case C2 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
		state = event2 : event3;
		state = event3 : event2;
    esac;
LTLSPEC ((state=event3) | ((state=event3) -> (state=event2)))
",True,True
"Initially, event3 is happened. After event1, no other events will happen. After event2, no other events will happen. After event3, event2 will happen.","C1: the case of that event3 happened is not true.
C2: The case of that event3 happened implies the case of C1, is true.
C3: C2 will always happen at any future time.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event3 : event2;
		state = event2 : event2;
		state = event1 : event1;
    esac;
LTLSPEC (G ((state=event3) -> (! (state=event3))))
",False,False
"Initially, event1 is happened. After event1, event2 will happen. After event1, event3 will happen. After event2, event1 will happen. After event3, no other events will happen.","C1: event3 will happen at next time.
C2: The case of that event1 happened and the case of C1, is true.
C3: The case of that event3 happened and the case of C2, is true.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event1 : event3;
		state = event2 : event1;
		state = event3 : event3;
    esac;
LTLSPEC ((state=event3) & ((state=event1) & (X (state=event3))))
",False,False
"Initially, event1 is happened. After event3, event1 will happen. After event1, event3 will happen. After event2, event1 will happen.","C1: The case of that event1 happened and the case of that event1 happened, is true.
C2: C1 will always happen at any future time.
C3: C2 will happen eventually.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event3;
		state = event2 : event1;
		state = event3 : event1;
    esac;
LTLSPEC (F (G ((state=event1) & (state=event1))))
",False,True
"Initially, event3 is happened. After event1, no other events will happen. After event2, event3 will happen. After event3, no other events will happen.","C1: The case of that event1 happened or the case of that event1 happened, is ture.
C2: C1 is not true.
C2 is true.

Determine whether the case C2 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event2 : event3;
		state = event1 : event1;
		state = event3 : event3;
    esac;
LTLSPEC (! ((state=event1) | (state=event1)))
",True,False
"Initially, event1 is happened. After event2, no other events will happen. After event1, event2 will happen. After event3, event2 will happen.","C1: The case of that event2 happened implies the case of that event3 happened, is true.
C1 is true.

Determine whether the case C1 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event3 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) -> (state=event3))
",True,True
"Initially, event2 is happened. After event2, event3 will happen. After event3, event1 will happen. After event1, no other events will happen.","C1: The case of that event3 happened or the case of that event3 happened, is ture.
C2: C1 is not true.
C3: The case of that event3 happened implies the case of C2, is true.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event3;
		state = event3 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event3) -> (! ((state=event3) | (state=event3))))
",True,False
"Initially, event3 is happened. After event3, event1 will happen. After event3, event2 will happen. After event1, no other events will happen. After event2, event3 will happen.","C1: The case of that event1 happened implies the case of that event2 happened, is true.
C2: C1 will always happen at any future time.
C2 is true.

Determine whether the case C2 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event2 : event3;
		state = event3 : event1;
		state = event3 : event2;
		state = event1 : event1;
    esac;
LTLSPEC (G ((state=event1) -> (state=event2)))
",False,False
"Initially, event2 is happened. After event1, event2 will happen. After event2, event1 will happen. After event2, event3 will happen. After event3, event2 will happen.","C1: event2 will always happen at any future time.
C2: The case of C1 implies the case of that event1 happened, is true.
C3: C2 is not true.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
		state = event2 : event3;
		state = event3 : event2;
    esac;
LTLSPEC (! ((G (state=event2)) -> (state=event1)))
",False,True
"Initially, event3 is happened. After event1, event2 will happen. After event2, event1 will happen. After event2, event3 will happen. After event3, event2 will happen.","C1: The case of that event1 happened and the case of that event1 happened, is true.
C2: C1 will always happen at any future time.
C3: C2 will happen at next time.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
		state = event2 : event3;
		state = event3 : event2;
    esac;
LTLSPEC (X (G ((state=event1) & (state=event1))))
",False,False
"Initially, event1 is happened. After event1, no other events will happen. After event2, event1 will happen. After event3, event2 will happen.","C1: event1 will happen at next time.
C2: C1 will happen eventually.
C3: C2 will happen at next time.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event3 : event2;
		state = event1 : event1;
    esac;
LTLSPEC (X (F (X (state=event1))))
",True,True
"Initially, event3 is happened. After event1, event3 will happen. After event3, event2 will happen. After event2, event1 will happen.","C1: event3 will happen eventually.
C2: event3 will happen eventually.
C3: The case of C1 or the case of C2, is ture.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event1 : event3;
		state = event2 : event1;
		state = event3 : event2;
    esac;
LTLSPEC ((F (state=event3)) | (F (state=event3)))
",True,True
"Initially, event1 is happened. After event1, event2 will happen. After event2, event3 will happen. After event3, no other events will happen.","C1: The case of that event3 happened or the case of that event3 happened, is ture.
C1 is true.

Determine whether the case C1 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event3;
		state = event3 : event3;
    esac;
LTLSPEC ((state=event3) | (state=event3))
",False,True
"Initially, event3 is happened. After event2, event3 will happen. After event3, no other events will happen. After event1, no other events will happen.","C1: event1 will always happen at any future time.
C2: The case of that event1 happened or the case of C1, is ture.
C2 is true.

Determine whether the case C2 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event2 : event3;
		state = event1 : event1;
		state = event3 : event3;
    esac;
LTLSPEC ((state=event1) | (G (state=event1)))
",False,True
"Initially, event3 is happened. After event1, event2 will happen. After event1, event3 will happen. After event2, event1 will happen. After event3, no other events will happen.","C1: The case of that event1 happened and the case of that event2 happened, is true.
C1 is true.

Determine whether the case C1 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event1 : event2;
		state = event1 : event3;
		state = event2 : event1;
		state = event3 : event3;
    esac;
LTLSPEC ((state=event1) & (state=event2))
",False,True
"Initially, event2 is happened. After event2, event3 will happen. After event3, event1 will happen. After event1, event3 will happen.","C1: The case of that event3 happened and the case of that event2 happened, is true.
C2: C1 will always happen at any future time.
C2 is true.

Determine whether the case C2 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event3;
		state = event2 : event3;
		state = event3 : event1;
    esac;
LTLSPEC (G ((state=event3) & (state=event2)))
",False,False
"Initially, event3 is happened. After event2, event1 will happen. After event1, no other events will happen. After event3, event2 will happen.","C1: The case of that event2 happened implies the case of that event1 happened, is true.
C2: C1 will happen at next time.
C2 is true.

Determine whether the case C2 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event2 : event1;
		state = event3 : event2;
		state = event1 : event1;
    esac;
LTLSPEC (X ((state=event2) -> (state=event1)))
",False,True
"Initially, event1 is happened. After event3, event1 will happen. After event3, event2 will happen. After event1, no other events will happen. After event2, event3 will happen.","C1: event1 will always happen at any future time.
C2: The case of that event2 happened implies the case of C1, is true.
C2 is true.

Determine whether the case C2 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event3;
		state = event3 : event1;
		state = event3 : event2;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event2) -> (G (state=event1)))
",True,True
"Initially, event3 is happened. After event2, no other events will happen. After event1, event2 will happen. After event1, event3 will happen. After event3, no other events will happen.","C1: The case of that event3 happened or the case of that event2 happened, is ture.
C2: The case of that event3 happened or the case of C1, is ture.
C3: The case of that event2 happened and the case of C2, is true.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event1 : event2;
		state = event1 : event3;
		state = event2 : event2;
		state = event3 : event3;
    esac;
LTLSPEC ((state=event2) & ((state=event3) | ((state=event3) | (state=event2))))
",False,True
"Initially, event1 is happened. After event3, no other events will happen. After event2, event3 will happen. After event1, event3 will happen.","C1: event2 will happen eventually.
C2: C1 is not true.
C3: The case of that event1 happened or the case of C2, is ture.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event3;
		state = event2 : event3;
		state = event3 : event3;
    esac;
LTLSPEC ((state=event1) | (! (F (state=event2))))
",True,True
"Initially, event2 is happened. After event1, event3 will happen. After event3, event1 will happen. After event3, event2 will happen. After event2, event3 will happen.","C1: event1 will always happen at any future time.
C2: C1 will happen at next time.
C3: C2 will happen at next time.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event3;
		state = event2 : event3;
		state = event3 : event1;
		state = event3 : event2;
    esac;
LTLSPEC (X (X (G (state=event1))))
",False,True
"Initially, event1 is happened. After event2, event1 will happen. After event2, event3 will happen. After event1, event3 will happen. After event3, event2 will happen. After event3, event2 will happen.","C1: event3 will happen eventually.
C2: The case of C1 implies the case of that event3 happened, is true.
C3: C2 will always happen at any future time.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event3;
		state = event2 : event1;
		state = event2 : event3;
		state = event3 : event2;
    esac;
LTLSPEC (G ((F (state=event3)) -> (state=event3)))
",False,True
"Initially, event2 is happened. After event1, event2 will happen. After event1, event3 will happen. After event2, no other events will happen. After event3, event2 will happen.","C1: event3 will happen eventually.
C2: The case of that event3 happened and the case of C1, is true.
C3: C2 will always happen at any future time.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event1 : event3;
		state = event3 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (G ((state=event3) & (F (state=event3))))
",False,False
"Initially, event2 is happened. After event3, event2 will happen. After event2, event3 will happen. After event1, event3 will happen.","C1: event3 will happen at next time.
C2: The case of C1 or the case of that event1 happened, is ture.
C2 is true.

Determine whether the case C2 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event3;
		state = event2 : event3;
		state = event3 : event2;
    esac;
LTLSPEC ((X (state=event3)) | (state=event1))
",True,True
"Initially, event1 is happened. After event2, event1 will happen. After event1, event2 will happen. After event1, event3 will happen. After event3, event1 will happen.","C1: The case of that event1 happened implies the case of that event1 happened, is true.
C2: C1 will always happen at any future time.
C2 is true.

Determine whether the case C2 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event1 : event3;
		state = event2 : event1;
		state = event3 : event1;
    esac;
LTLSPEC (G ((state=event1) -> (state=event1)))
",True,True
"Initially, event3 is happened. After event3, event2 will happen. After event2, event1 will happen. After event1, no other events will happen.","C1: The case of that event3 happened or the case of that event3 happened, is ture.
C1 is true.

Determine whether the case C1 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event2 : event1;
		state = event3 : event2;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event3) | (state=event3))
",True,True
"Initially, event3 is happened. After event1, event3 will happen. After event3, no other events will happen. After event2, event1 will happen.","C1: The case of that event1 happened or the case of that event1 happened, is ture.
C2: The case of that event3 happened implies the case of C1, is true.
C3: C2 will always happen at any future time.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event1 : event3;
		state = event2 : event1;
		state = event3 : event3;
    esac;
LTLSPEC (G ((state=event3) -> ((state=event1) | (state=event1))))
",False,True
"Initially, event2 is happened. After event3, no other events will happen. After event2, event3 will happen. After event1, no other events will happen.","C1: The case of that event3 happened or the case of that event1 happened, is ture.
C2: C1 is not true.
C3: The case of C2 implies the case of that event3 happened, is true.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event3;
		state = event1 : event1;
		state = event3 : event3;
    esac;
LTLSPEC ((! ((state=event3) | (state=event1))) -> (state=event3))
",False,True
"Initially, event2 is happened. After event2, no other events will happen. After event1, event3 will happen. After event3, event2 will happen.","C1: event2 will always happen at any future time.
C2: The case of that event1 happened and the case of C1, is true.
C2 is true.

Determine whether the case C2 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event3;
		state = event3 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) & (G (state=event2)))
",False,True
"Initially, event3 is happened. After event3, event1 will happen. After event1, event2 will happen. After event1, event3 will happen. After event2, no other events will happen.","C1: The case of that event1 happened implies the case of that event3 happened, is true.
C2: The case of C1 and the case of that event1 happened, is true.
C3: C2 will happen eventually.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event1 : event2;
		state = event1 : event3;
		state = event3 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (F (((state=event1) -> (state=event3)) & (state=event1)))
",False,True
"Initially, event3 is happened. After event2, event1 will happen. After event2, event3 will happen. After event1, event2 will happen. After event1, event3 will happen. After event3, event1 will happen. After event3, event2 will happen. After event3, event1 will happen. After event3, event2 will happen.","C1: The case of that event1 happened or the case of that event2 happened, is ture.
C2: The case of that event3 happened implies the case of C1, is true.
C3: C2 will happen at next time.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event1 : event2;
		state = event1 : event3;
		state = event2 : event1;
		state = event2 : event3;
		state = event3 : event1;
		state = event3 : event2;
    esac;
LTLSPEC (X ((state=event3) -> ((state=event1) | (state=event2))))
",True,True
"Initially, event1 is happened. After event3, no other events will happen. After event2, event3 will happen. After event1, event2 will happen. After event1, event3 will happen.","C1: The case of that event1 happened or the case of that event2 happened, is ture.
C2: C1 will always happen at any future time.
C3: C2 will happen eventually.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event1 : event3;
		state = event2 : event3;
		state = event3 : event3;
    esac;
LTLSPEC (F (G ((state=event1) | (state=event2))))
",False,True
"Initially, event2 is happened. After event2, event3 will happen. After event3, event1 will happen. After event1, no other events will happen.","C1: the case of that event2 happened is not true.
C2: C1 is not true.
C3: C2 is not true.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event3;
		state = event3 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (! (! (! (state=event2))))
",False,False
"Initially, event3 is happened. After event2, event3 will happen. After event3, event2 will happen. After event1, event3 will happen.","C1: event3 will always happen at any future time.
C2: The case of that event2 happened or the case of C1, is ture.
C3: C2 is not true.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event1 : event3;
		state = event2 : event3;
		state = event3 : event2;
    esac;
LTLSPEC (! ((state=event2) | (G (state=event3))))
",True,False
"Initially, event2 is happened. After event1, no other events will happen. After event2, event1 will happen. After event2, event3 will happen. After event3, event1 will happen. After event3, event2 will happen.","C1: The case of that event3 happened and the case of that event2 happened, is true.
C2: C1 will always happen at any future time.
C2 is true.

Determine whether the case C2 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event2 : event3;
		state = event3 : event1;
		state = event3 : event2;
		state = event1 : event1;
    esac;
LTLSPEC (G ((state=event3) & (state=event2)))
",False,False
"Initially, event2 is happened. After event3, event1 will happen. After event3, event2 will happen. After event1, no other events will happen. After event2, no other events will happen.","C1: The case of that event1 happened implies the case of that event1 happened, is true.
C2: C1 will happen eventually.
C3: C2 will always happen at any future time.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event3 : event1;
		state = event3 : event2;
		state = event2 : event2;
		state = event1 : event1;
    esac;
LTLSPEC (G (F ((state=event1) -> (state=event1))))
",True,True
"Initially, event2 is happened. After event1, event3 will happen. After event3, event1 will happen. After event2, no other events will happen.","C1: event1 will happen eventually.
C2: C1 will happen at next time.
C3: C2 is not true.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event3;
		state = event3 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (! (X (F (state=event1))))
",True,True
"Initially, event1 is happened. After event1, event3 will happen. After event3, event1 will happen. After event3, event2 will happen. After event2, event1 will happen. After event2, event3 will happen.","C1: The case of that event2 happened and the case of that event2 happened, is true.
C2: C1 will always happen at any future time.
C3: C2 will happen at next time.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event3;
		state = event2 : event1;
		state = event2 : event3;
		state = event3 : event1;
		state = event3 : event2;
    esac;
LTLSPEC (X (G ((state=event2) & (state=event2))))
",False,False
"Initially, event2 is happened. After event1, event2 will happen. After event2, event1 will happen. After event3, event2 will happen.","C1: The case of that event1 happened or the case of that event2 happened, is ture.
C2: C1 will always happen at any future time.
C3: The case of that event1 happened and the case of C2, is true.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
		state = event3 : event2;
    esac;
LTLSPEC ((state=event1) & (G ((state=event1) | (state=event2))))
",False,True
"Initially, event3 is happened. After event3, event1 will happen. After event3, event2 will happen. After event1, event2 will happen. After event1, event3 will happen. After event2, no other events will happen. After event2, no other events will happen.","C1: The case of that event3 happened or the case of that event1 happened, is ture.
C2: C1 is not true.
C3: C2 is not true.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event1 : event2;
		state = event1 : event3;
		state = event3 : event1;
		state = event3 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (! (! ((state=event3) | (state=event1))))
",True,True
"Initially, event3 is happened. After event1, event2 will happen. After event1, event3 will happen. After event2, event1 will happen. After event3, event2 will happen.","C1: The case of that event2 happened and the case of that event3 happened, is true.
C2: The case of that event2 happened and the case of that event3 happened, is true.
C3: The case of C1 and the case of C2, is true.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event1 : event2;
		state = event1 : event3;
		state = event2 : event1;
		state = event3 : event2;
    esac;
LTLSPEC (((state=event2) & (state=event3)) & ((state=event2) & (state=event3)))
",False,True
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen. After event3, no other events will happen.","C1: The case of that event1 happened or the case of that event1 happened, is ture.
C2: The case of C1 implies the case of that event3 happened, is true.
C3: C2 is not true.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
		state = event3 : event3;
    esac;
LTLSPEC (! (((state=event1) | (state=event1)) -> (state=event3)))
",True,False
"Initially, event3 is happened. After event3, event2 will happen. After event2, event1 will happen. After event2, event3 will happen. After event1, event2 will happen. After event1, event3 will happen.","C1: event3 will always happen at any future time.
C2: C1 will happen eventually.
C3: C2 will happen at next time.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event1 : event2;
		state = event1 : event3;
		state = event2 : event1;
		state = event2 : event3;
		state = event3 : event2;
    esac;
LTLSPEC (X (F (G (state=event3))))
",False,True
"Initially, event3 is happened. After event2, no other events will happen. After event1, event3 will happen. After event3, no other events will happen.","C1: the case of that event1 happened is not true.
C2: The case of that event3 happened or the case of C1, is ture.
C2 is true.

Determine whether the case C2 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event1 : event3;
		state = event2 : event2;
		state = event3 : event3;
    esac;
LTLSPEC ((state=event3) | (! (state=event1)))
",True,True
"Initially, event3 is happened. After event3, event2 will happen. After event2, no other events will happen. After event1, event2 will happen. After event1, event3 will happen.","C1: The case of that event3 happened implies the case of that event2 happened, is true.
C2: The case of C1 implies the case of that event3 happened, is true.
C2 is true.

Determine whether the case C2 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event1 : event2;
		state = event1 : event3;
		state = event3 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (((state=event3) -> (state=event2)) -> (state=event3))
",True,True
"Initially, event3 is happened. After event3, event2 will happen. After event2, event1 will happen. After event1, no other events will happen.","C1: The case of that event3 happened implies the case of that event2 happened, is true.
C2: C1 will happen at next time.
C3: The case of that event3 happened implies the case of C2, is true.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event2 : event1;
		state = event3 : event2;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event3) -> (X ((state=event3) -> (state=event2))))
",True,True
"Initially, event1 is happened. After event3, event1 will happen. After event1, no other events will happen. After event2, no other events will happen.","C1: The case of that event2 happened or the case of that event1 happened, is ture.
C2: The case of that event3 happened or the case of C1, is ture.
C2 is true.

Determine whether the case C2 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event3 : event1;
		state = event2 : event2;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event3) | ((state=event2) | (state=event1)))
",True,True
"Initially, event2 is happened. After event3, event1 will happen. After event1, no other events will happen. After event2, event3 will happen.","C1: The case of that event3 happened and the case of that event3 happened, is true.
C2: C1 will always happen at any future time.
C3: C2 will happen eventually.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event3;
		state = event3 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (F (G ((state=event3) & (state=event3))))
",False,True
"Initially, event2 is happened. After event3, event1 will happen. After event1, event2 will happen. After event2, event3 will happen.","C1: The case of that event3 happened and the case of that event3 happened, is true.
C2: The case of that event1 happened or the case of C1, is ture.
C3: C2 is not true.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event3;
		state = event3 : event1;
    esac;
LTLSPEC (! ((state=event1) | ((state=event3) & (state=event3))))
",True,False
"Initially, event3 is happened. After event2, event3 will happen. After event3, event1 will happen. After event3, event2 will happen. After event1, no other events will happen.","C1: event3 will happen at next time.
C2: The case of C1 and the case of that event2 happened, is true.
C3: C2 will happen at next time.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event2 : event3;
		state = event3 : event1;
		state = event3 : event2;
		state = event1 : event1;
    esac;
LTLSPEC (X ((X (state=event3)) & (state=event2)))
",False,False
"Initially, event1 is happened. After event2, event3 will happen. After event3, event1 will happen. After event3, event2 will happen. After event1, event2 will happen. After event1, event3 will happen.","C1: event1 will always happen at any future time.
C2: C1 will always happen at any future time.
C3: The case of that event3 happened and the case of C2, is true.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event1 : event3;
		state = event2 : event3;
		state = event3 : event1;
		state = event3 : event2;
    esac;
LTLSPEC ((state=event3) & (G (G (state=event1))))
",False,True
"Initially, event1 is happened. After event1, event2 will happen. After event1, event3 will happen. After event2, event3 will happen. After event3, event1 will happen. After event3, event1 will happen.","C1: event2 will always happen at any future time.
C2: The case of that event1 happened implies the case of C1, is true.
C2 is true.

Determine whether the case C2 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event1 : event3;
		state = event2 : event3;
		state = event3 : event1;
    esac;
LTLSPEC ((state=event1) -> (G (state=event2)))
",False,True
"Initially, event3 is happened. After event3, event1 will happen. After event3, event2 will happen. After event1, event2 will happen. After event2, event1 will happen. After event2, event1 will happen.","C1: The case of that event1 happened implies the case of that event1 happened, is true.
C2: The case of that event1 happened and the case of C1, is true.
C3: C2 will happen eventually.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
		state = event3 : event1;
		state = event3 : event2;
    esac;
LTLSPEC (F ((state=event1) & ((state=event1) -> (state=event1))))
",True,True
"Initially, event3 is happened. After event3, no other events will happen. After event2, no other events will happen. After event1, event2 will happen. After event1, event3 will happen.","C1: The case of that event2 happened and the case of that event3 happened, is true.
C2: C1 will always happen at any future time.
C2 is true.

Determine whether the case C2 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event1 : event2;
		state = event1 : event3;
		state = event2 : event2;
		state = event3 : event3;
    esac;
LTLSPEC (G ((state=event2) & (state=event3)))
",False,False
"Initially, event3 is happened. After event3, event1 will happen. After event1, no other events will happen. After event2, event3 will happen.","C1: The case of that event3 happened implies the case of that event1 happened, is true.
C2: The case of that event1 happened and the case of C1, is true.
C3: C2 will always happen at any future time.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event2 : event3;
		state = event3 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (G ((state=event1) & ((state=event3) -> (state=event1))))
",False,True
"Initially, event3 is happened. After event2, event1 will happen. After event2, event3 will happen. After event1, event2 will happen. After event3, event2 will happen.","C1: the case of that event1 happened is not true.
C2: C1 will happen at next time.
C3: C2 will happen at next time.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
		state = event2 : event3;
		state = event3 : event2;
    esac;
LTLSPEC (X (X (! (state=event1))))
",False,False
"Initially, event1 is happened. After event3, event1 will happen. After event3, event2 will happen. After event1, event2 will happen. After event2, event3 will happen. After event2, event3 will happen.","C1: event1 will happen at next time.
C2: C1 is not true.
C3: The case of that event2 happened and the case of C2, is true.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event3;
		state = event3 : event1;
		state = event3 : event2;
    esac;
LTLSPEC ((state=event2) & (! (X (state=event1))))
",False,False
"Initially, event3 is happened. After event1, event2 will happen. After event2, event3 will happen. After event3, event2 will happen.","C1: event3 will always happen at any future time.
C2: The case of that event1 happened and the case of C1, is true.
C3: C2 is not true.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event1 : event2;
		state = event2 : event3;
		state = event3 : event2;
    esac;
LTLSPEC (! ((state=event1) & (G (state=event3))))
",True,True
"Initially, event1 is happened. After event1, event2 will happen. After event1, event3 will happen. After event2, event3 will happen. After event3, event1 will happen. After event3, event2 will happen. After event3, event1 will happen. After event3, event2 will happen.","C1: The case of that event3 happened implies the case of that event3 happened, is true.
C2: The case of C1 implies the case of that event2 happened, is true.
C3: C2 is not true.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event1 : event3;
		state = event2 : event3;
		state = event3 : event1;
		state = event3 : event2;
    esac;
LTLSPEC (! (((state=event3) -> (state=event3)) -> (state=event2)))
",True,False
"Initially, event1 is happened. After event1, no other events will happen. After event2, event3 will happen. After event3, no other events will happen.","C1: event3 will always happen at any future time.
C2: The case of C1 or the case of that event1 happened, is ture.
C3: The case of that event2 happened implies the case of C2, is true.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event3;
		state = event1 : event1;
		state = event3 : event3;
    esac;
LTLSPEC ((state=event2) -> ((G (state=event3)) | (state=event1)))
",True,True
"Initially, event1 is happened. After event3, event1 will happen. After event1, event2 will happen. After event2, no other events will happen.","C1: The case of that event2 happened implies the case of that event3 happened, is true.
C2: The case of that event2 happened implies the case of that event3 happened, is true.
C3: The case of C1 and the case of C2, is true.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event3 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (((state=event2) -> (state=event3)) & ((state=event2) -> (state=event3)))
",True,True
"Initially, event1 is happened. After event1, no other events will happen. After event2, no other events will happen. After event3, event2 will happen.","C1: event3 will happen eventually.
C2: The case of that event3 happened implies the case of C1, is true.
C3: The case of that event3 happened or the case of C2, is ture.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event3 : event2;
		state = event2 : event2;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event3) | ((state=event3) -> (F (state=event3))))
",True,True
"Initially, event1 is happened. After event3, event1 will happen. After event1, event2 will happen. After event2, event3 will happen.","C1: the case of that event3 happened is not true.
C2: The case of that event3 happened and the case of C1, is true.
C3: C2 will always happen at any future time.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event3;
		state = event3 : event1;
    esac;
LTLSPEC (G ((state=event3) & (! (state=event3))))
",False,False
"Initially, event3 is happened. After event3, event2 will happen. After event2, event1 will happen. After event1, event2 will happen. After event1, event3 will happen.","C1: The case of that event3 happened or the case of that event3 happened, is ture.
C2: C1 will happen eventually.
C2 is true.

Determine whether the case C2 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event1 : event2;
		state = event1 : event3;
		state = event2 : event1;
		state = event3 : event2;
    esac;
LTLSPEC (F ((state=event3) | (state=event3)))
",True,True
"Initially, event2 is happened. After event3, no other events will happen. After event2, event1 will happen. After event2, event3 will happen. After event1, event2 will happen. After event1, event3 will happen.","C1: The case of that event1 happened and the case of that event3 happened, is true.
C2: C1 will happen at next time.
C3: C2 will always happen at any future time.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event1 : event3;
		state = event2 : event1;
		state = event2 : event3;
		state = event3 : event3;
    esac;
LTLSPEC (G (X ((state=event1) & (state=event3))))
",False,False
"Initially, event3 is happened. After event2, event1 will happen. After event2, event3 will happen. After event1, no other events will happen. After event3, event2 will happen.","C1: The case of that event3 happened implies the case of that event3 happened, is true.
C2: The case of that event1 happened or the case of C1, is ture.
C3: C2 will always happen at any future time.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event2 : event1;
		state = event2 : event3;
		state = event3 : event2;
		state = event1 : event1;
    esac;
LTLSPEC (G ((state=event1) | ((state=event3) -> (state=event3))))
",True,True
"Initially, event2 is happened. After event2, no other events will happen. After event1, event2 will happen. After event3, event2 will happen.","C1: The case of that event2 happened implies the case of that event1 happened, is true.
C1 is true.

Determine whether the case C1 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event3 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) -> (state=event1))
",False,True
"Initially, event3 is happened. After event2, event3 will happen. After event3, event1 will happen. After event3, event2 will happen. After event1, no other events will happen.","C1: The case of that event3 happened implies the case of that event3 happened, is true.
C2: C1 will always happen at any future time.
C3: The case of C2 implies the case of that event2 happened, is true.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event2 : event3;
		state = event3 : event1;
		state = event3 : event2;
		state = event1 : event1;
    esac;
LTLSPEC ((G ((state=event3) -> (state=event3))) -> (state=event2))
",False,True
"Initially, event1 is happened. After event2, event1 will happen. After event1, no other events will happen. After event3, event1 will happen.","C1: The case of that event3 happened or the case of that event2 happened, is ture.
C2: The case of that event3 happened and the case of C1, is true.
C2 is true.

Determine whether the case C2 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event3 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event3) & ((state=event3) | (state=event2)))
",False,True
"Initially, event2 is happened. After event1, event2 will happen. After event2, event1 will happen. After event2, event3 will happen. After event3, event1 will happen. After event3, event2 will happen.","C1: The case of that event3 happened or the case of that event1 happened, is ture.
C2: The case of C1 and the case of that event2 happened, is true.
C2 is true.

Determine whether the case C2 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
		state = event2 : event3;
		state = event3 : event1;
		state = event3 : event2;
    esac;
LTLSPEC (((state=event3) | (state=event1)) & (state=event2))
",False,True
"Initially, event2 is happened. After event3, no other events will happen. After event2, event3 will happen. After event1, event3 will happen.","C1: The case of that event2 happened implies the case of that event1 happened, is true.
C2: The case of that event1 happened and the case of C1, is true.
C3: The case of that event1 happened implies the case of C2, is true.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event3;
		state = event2 : event3;
		state = event3 : event3;
    esac;
LTLSPEC ((state=event1) -> ((state=event1) & ((state=event2) -> (state=event1))))
",True,True
"Initially, event2 is happened. After event1, event2 will happen. After event1, event3 will happen. After event2, event1 will happen. After event2, event3 will happen. After event3, no other events will happen. After event3, no other events will happen.","C1: event1 will happen at next time.
C2: The case of that event1 happened implies the case of C1, is true.
C2 is true.

Determine whether the case C2 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event1 : event3;
		state = event2 : event1;
		state = event2 : event3;
		state = event3 : event3;
    esac;
LTLSPEC ((state=event1) -> (X (state=event1)))
",True,True
"Initially, event2 is happened. After event2, no other events will happen. After event1, event2 will happen. After event3, event1 will happen. After event3, event2 will happen.","C1: The case of that event3 happened or the case of that event2 happened, is ture.
C2: C1 will happen eventually.
C3: C2 will always happen at any future time.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event3 : event1;
		state = event3 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (G (F ((state=event3) | (state=event2))))
",True,True
"Initially, event2 is happened. After event1, event2 will happen. After event2, event3 will happen. After event3, event2 will happen.","C1: event1 will happen at next time.
C2: The case of C1 implies the case of that event2 happened, is true.
C3: C2 is not true.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event3;
		state = event3 : event2;
    esac;
LTLSPEC (! ((X (state=event1)) -> (state=event2)))
",False,False
"Initially, event2 is happened. After event3, no other events will happen. After event2, event1 will happen. After event2, event3 will happen. After event1, event2 will happen.","C1: event3 will always happen at any future time.
C2: C1 will always happen at any future time.
C3: C2 is not true.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
		state = event2 : event3;
		state = event3 : event3;
    esac;
LTLSPEC (! (G (G (state=event3))))
",True,True
"Initially, event2 is happened. After event3, event2 will happen. After event2, no other events will happen. After event1, event2 will happen.","C1: event2 will happen eventually.
C2: The case of that event3 happened and the case of C1, is true.
C2 is true.

Determine whether the case C2 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event3 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event3) & (F (state=event2)))
",False,True
"Initially, event2 is happened. After event1, no other events will happen. After event2, event1 will happen. After event2, event3 will happen. After event3, no other events will happen.","C1: The case of that event1 happened implies the case of that event3 happened, is true.
C1 is true.

Determine whether the case C1 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event2 : event3;
		state = event1 : event1;
		state = event3 : event3;
    esac;
LTLSPEC ((state=event1) -> (state=event3))
",True,True
"Initially, event1 is happened. After event1, no other events will happen. After event2, event3 will happen. After event3, event1 will happen.","C1: event2 will always happen at any future time.
C2: C1 will happen eventually.
C3: C2 will happen eventually.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event3;
		state = event3 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (F (F (G (state=event2))))
",False,True
"Initially, event3 is happened. After event3, event1 will happen. After event1, event3 will happen. After event2, event1 will happen.","C1: event2 will happen at next time.
C2: C1 is not true.
C3: The case of C2 or the case of that event1 happened, is ture.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event3;
    next(state) := case
        state = event1 : event3;
		state = event2 : event1;
		state = event3 : event1;
    esac;
LTLSPEC ((! (X (state=event2))) | (state=event1))
",True,True
"Initially, event2 is happened. After event2, event1 will happen. After event1, event3 will happen. After event3, event1 will happen.","C1: The case of that event2 happened and the case of that event1 happened, is true.
C2: C1 will happen eventually.
C3: C2 is not true.
C3 is true.

Determine whether the case C3 is true or false (answering in ""true"" or ""false"" directly):","MODULE main
VAR
    state : {event1, event2, event3};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event3;
		state = event2 : event1;
		state = event3 : event1;
    esac;
LTLSPEC (! (F ((state=event2) & (state=event1))))
",True,False
