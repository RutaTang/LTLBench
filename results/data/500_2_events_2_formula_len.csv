context,query,code,answer
"Initially, event2 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened implies event2 will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event1) -> (G (state=event2)))
",True
"Initially, event2 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened and that it is the case that event1 is happened will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (X ((state=event2) & (state=event1)))
",False
"Initially, event1 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened is not true will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (X (! (state=event2)))
",False
"Initially, event2 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will happen eventually will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (G (F (state=event2)))
",True
"Initially, event2 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened is not true will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (X (! (state=event1)))
",True
"Initially, event2 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened is not true will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (G (! (state=event2)))
",False
"Initially, event2 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will happen eventually will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (F (F (state=event1)))
",True
"Initially, event1 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of the case of that it is the case that event1 is happened implies that it is the case that event1 is happened or that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (((state=event1) -> (state=event1)) | (state=event1))
",True
"Initially, event2 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened or event2 will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event1) | (G (state=event2)))
",False
"Initially, event2 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that the case of that it is the case that event1 is happened or that it is the case that event1 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (! ((state=event1) | (state=event1)))
",True
"Initially, event1 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened or event2 will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event1) | (G (state=event2)))
",True
"Initially, event2 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that the case of that it is the case that event2 is happened or that it is the case that event1 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (! ((state=event2) | (state=event1)))
",False
"Initially, event2 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will always happen at any future time will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (F (G (state=event2)))
",False
"Initially, event1 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of the case of that it is the case that event2 is happened and that it is the case that event2 is happened implies that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (((state=event2) & (state=event2)) -> (state=event1))
",True
"Initially, event1 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened and that it is the case that event2 is happened will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (X ((state=event2) & (state=event2)))
",True
"Initially, event2 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened is not true will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (X (! (state=event2)))
",True
"Initially, event2 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened or event2 will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event1) | (G (state=event2)))
",False
"Initially, event2 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened and that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) & (state=event1))
",False
"Initially, event2 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened and that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) & (state=event2))
",False
"Initially, event2 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will happen eventually will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (X (F (state=event2)))
",False
"Initially, event1 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened implies event2 will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event1) -> (G (state=event2)))
",False
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened and that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) & (state=event1))
",True
"Initially, event2 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that event2 will always happen at any future time is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (! (G (state=event2)))
",False
"Initially, event1 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened is not true will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (F (! (state=event2)))
",True
"Initially, event2 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened or event1 will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) | (G (state=event1)))
",True
"Initially, event2 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened and that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event2) & (state=event2))
",True
"Initially, event1 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened is not true will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (G (! (state=event2)))
",False
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of the case of that it is the case that event1 is happened implies that it is the case that event2 is happened or that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (((state=event1) -> (state=event2)) | (state=event2))
",False
"Initially, event2 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened or that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) | (state=event2))
",True
"Initially, event2 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened and event2 will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) & (X (state=event2)))
",True
"Initially, event1 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened is not true will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (F (! (state=event2)))
",True
"Initially, event2 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of event2 will happen at next time and that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((X (state=event2)) & (state=event1))
",False
"Initially, event1 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened and that it is the case that event1 is happened will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (X ((state=event2) & (state=event1)))
",False
"Initially, event1 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened implies the case of that it is the case that event2 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) -> (! (state=event2)))
",True
"Initially, event1 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened implies event1 will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) -> (F (state=event1)))
",True
"Initially, event2 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened or that it is the case that event1 is happened will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (F ((state=event2) | (state=event1)))
",True
"Initially, event1 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened implies the case of that it is the case that event1 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) -> (! (state=event1)))
",True
"Initially, event2 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of event2 will happen eventually or that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((F (state=event2)) | (state=event1))
",True
"Initially, event2 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened or that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event2) | (state=event1))
",True
"Initially, event2 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of event2 will happen at next time or that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((X (state=event2)) | (state=event1))
",False
"Initially, event2 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened implies that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event2) -> (state=event2))
",True
"Initially, event1 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened is not true will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (X (! (state=event1)))
",True
"Initially, event2 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that the case of that it is the case that event1 is happened is not true is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (! (! (state=event1)))
",False
"Initially, event1 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened and that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event2) & (state=event2))
",False
"Initially, event2 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened and event2 will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) & (X (state=event2)))
",False
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened and the case of that it is the case that event2 is happened or that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) & ((state=event2) | (state=event2)))
",False
"Initially, event1 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will always happen at any future time will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (G (G (state=event1)))
",True
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will always happen at any future time will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (F (G (state=event1)))
",True
"Initially, event2 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened or that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) | (state=event1))
",False
"Initially, event1 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened implies that it is the case that event1 is happened will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (F ((state=event1) -> (state=event1)))
",True
"Initially, event2 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened implies the case of that it is the case that event1 is happened and that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) -> ((state=event1) & (state=event2)))
",False
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of the case of that it is the case that event1 is happened implies that it is the case that event2 is happened and that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (((state=event1) -> (state=event2)) & (state=event1))
",False
"Initially, event2 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that the case of that it is the case that event1 is happened implies that it is the case that event2 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (! ((state=event1) -> (state=event2)))
",False
"Initially, event2 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened implies event1 will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) -> (X (state=event1)))
",False
"Initially, event1 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened and event1 will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event2) & (F (state=event1)))
",False
"Initially, event2 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened is not true will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (F (! (state=event1)))
",True
"Initially, event2 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened implies that it is the case that event2 is happened will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (X ((state=event2) -> (state=event2)))
",True
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that event1 will happen eventually is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (! (F (state=event1)))
",False
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened and that it is the case that event1 is happened will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (G ((state=event1) & (state=event1)))
",False
"Initially, event1 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened implies that it is the case that event1 is happened will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (G ((state=event1) -> (state=event1)))
",True
"Initially, event1 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will happen at next time will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (X (X (state=event1)))
",True
"Initially, event1 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will happen eventually will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (G (F (state=event2)))
",False
"Initially, event1 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened or that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event2) | (state=event2))
",False
"Initially, event1 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that event1 will always happen at any future time is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (! (G (state=event1)))
",True
"Initially, event1 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened or that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event2) | (state=event2))
",False
"Initially, event2 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened or the case of that it is the case that event1 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) | (! (state=event1)))
",True
"Initially, event2 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened or that it is the case that event1 is happened will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (X ((state=event2) | (state=event1)))
",True
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened and that it is the case that event1 is happened will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (F ((state=event1) & (state=event1)))
",True
"Initially, event2 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened and that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event1) & (state=event1))
",False
"Initially, event2 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will always happen at any future time will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (X (G (state=event2)))
",True
"Initially, event2 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened implies that it is the case that event2 is happened will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (X ((state=event2) -> (state=event2)))
",True
"Initially, event1 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened and that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) & (state=event1))
",False
"Initially, event2 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened or that it is the case that event2 is happened will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (F ((state=event2) | (state=event2)))
",True
"Initially, event2 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened and event1 will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) & (F (state=event1)))
",False
"Initially, event2 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened and that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event2) & (state=event1))
",False
"Initially, event2 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened implies the case of that it is the case that event2 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) -> (! (state=event2)))
",False
"Initially, event1 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened implies event2 will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) -> (G (state=event2)))
",True
"Initially, event1 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that the case of that it is the case that event1 is happened is not true is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (! (! (state=event1)))
",True
"Initially, event2 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened is not true will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (G (! (state=event1)))
",True
"Initially, event1 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened implies event1 will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) -> (G (state=event1)))
",False
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened implies the case of that it is the case that event2 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event1) -> (! (state=event2)))
",True
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened and that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) & (state=event2))
",False
"Initially, event1 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened and that it is the case that event2 is happened will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (G ((state=event2) & (state=event2)))
",False
"Initially, event1 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will happen eventually will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (F (F (state=event2)))
",True
"Initially, event2 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened or the case of that it is the case that event2 is happened implies that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event2) | ((state=event2) -> (state=event1)))
",True
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of the case of that it is the case that event1 is happened implies that it is the case that event1 is happened implies that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (((state=event1) -> (state=event1)) -> (state=event2))
",False
"Initially, event1 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened or that it is the case that event1 is happened will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (G ((state=event2) | (state=event1)))
",True
"Initially, event2 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened implies that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event1) -> (state=event1))
",True
"Initially, event1 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will always happen at any future time will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (G (G (state=event1)))
",False
"Initially, event2 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will happen at next time will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (G (X (state=event2)))
",False
"Initially, event1 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that event2 will happen eventually is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (! (F (state=event2)))
",False
"Initially, event2 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened implies the case of that it is the case that event2 is happened implies that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event1) -> ((state=event2) -> (state=event2)))
",True
"Initially, event1 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will happen at next time will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (G (X (state=event1)))
",False
"Initially, event1 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened or that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) | (state=event1))
",True
"Initially, event2 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened or that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event2) | (state=event2))
",True
"Initially, event1 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that the case of that it is the case that event1 is happened is not true is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (! (! (state=event1)))
",True
"Initially, event1 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will happen at next time will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (G (X (state=event2)))
",False
"Initially, event2 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened and event2 will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) & (F (state=event2)))
",False
"Initially, event2 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened implies the case of that it is the case that event1 is happened and that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) -> ((state=event1) & (state=event2)))
",False
"Initially, event1 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened implies the case of that it is the case that event2 is happened or that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event2) -> ((state=event2) | (state=event2)))
",True
"Initially, event2 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened is not true will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (G (! (state=event2)))
",False
"Initially, event1 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that the case of that it is the case that event2 is happened implies that it is the case that event2 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (! ((state=event2) -> (state=event2)))
",False
"Initially, event1 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened or the case of that it is the case that event1 is happened and that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) | ((state=event1) & (state=event1)))
",True
"Initially, event1 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will happen at next time will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (X (X (state=event1)))
",True
"Initially, event2 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that the case of that it is the case that event2 is happened is not true is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (! (! (state=event2)))
",True
"Initially, event2 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened implies the case of that it is the case that event2 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) -> (! (state=event2)))
",True
"Initially, event2 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that the case of that it is the case that event2 is happened or that it is the case that event1 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (! ((state=event2) | (state=event1)))
",False
"Initially, event2 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened is not true will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (G (! (state=event1)))
",False
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened and that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event2) & (state=event1))
",False
"Initially, event2 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened is not true will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (G (! (state=event1)))
",True
"Initially, event1 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened implies that it is the case that event1 is happened will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (F ((state=event1) -> (state=event1)))
",True
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened implies that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) -> (state=event1))
",True
"Initially, event2 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that the case of that it is the case that event1 is happened or that it is the case that event1 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (! ((state=event1) | (state=event1)))
",True
"Initially, event2 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will happen eventually will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (X (F (state=event2)))
",True
"Initially, event1 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that event2 will happen at next time is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (! (X (state=event2)))
",False
"Initially, event2 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened or that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) | (state=event1))
",True
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened implies that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event2) -> (state=event2))
",True
"Initially, event2 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that event1 will always happen at any future time is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (! (G (state=event1)))
",True
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened is not true will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (G (! (state=event2)))
",False
"Initially, event2 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will happen eventually will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (X (F (state=event2)))
",False
"Initially, event1 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will happen at next time will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (X (X (state=event2)))
",False
"Initially, event2 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened or the case of that it is the case that event1 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) | (! (state=event1)))
",True
"Initially, event1 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of the case of that it is the case that event2 is happened or that it is the case that event2 is happened or that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (((state=event2) | (state=event2)) | (state=event1))
",True
"Initially, event1 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will always happen at any future time will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (F (G (state=event2)))
",False
"Initially, event1 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened or that it is the case that event1 is happened will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (X ((state=event2) | (state=event1)))
",True
"Initially, event2 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will always happen at any future time will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (F (G (state=event2)))
",False
"Initially, event2 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened implies the case of that it is the case that event2 is happened or that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event2) -> ((state=event2) | (state=event2)))
",True
"Initially, event2 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened and that it is the case that event2 is happened will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (F ((state=event2) & (state=event2)))
",True
"Initially, event2 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened implies that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) -> (state=event2))
",True
"Initially, event1 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of event1 will happen eventually implies that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((F (state=event1)) -> (state=event2))
",False
"Initially, event1 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will happen at next time will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (X (X (state=event2)))
",False
"Initially, event2 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened or that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) | (state=event2))
",True
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened is not true will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (G (! (state=event1)))
",False
"Initially, event1 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of the case of that it is the case that event2 is happened is not true and that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((! (state=event2)) & (state=event1))
",True
"Initially, event2 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will happen at next time will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (X (X (state=event1)))
",False
"Initially, event2 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened or the case of that it is the case that event2 is happened and that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) | ((state=event2) & (state=event2)))
",True
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of event1 will happen eventually implies that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((F (state=event1)) -> (state=event2))
",False
"Initially, event2 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened implies that it is the case that event1 is happened will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (X ((state=event2) -> (state=event1)))
",True
"Initially, event2 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened is not true will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (G (! (state=event2)))
",False
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened and event1 will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event2) & (G (state=event1)))
",False
"Initially, event1 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened and that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) & (state=event1))
",False
"Initially, event2 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will happen at next time will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (G (X (state=event1)))
",True
"Initially, event2 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened implies event2 will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) -> (X (state=event2)))
",True
"Initially, event2 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will happen at next time will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (F (X (state=event1)))
",False
"Initially, event1 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened implies that it is the case that event2 is happened will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (F ((state=event2) -> (state=event2)))
",True
"Initially, event2 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that the case of that it is the case that event2 is happened and that it is the case that event1 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (! ((state=event2) & (state=event1)))
",True
"Initially, event1 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened is not true will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (X (! (state=event1)))
",True
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened implies event2 will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event2) -> (X (state=event2)))
",True
"Initially, event2 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened or that it is the case that event2 is happened will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (X ((state=event2) | (state=event2)))
",False
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened and that it is the case that event1 is happened will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (X ((state=event2) & (state=event1)))
",False
"Initially, event2 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of event1 will happen eventually implies that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((F (state=event1)) -> (state=event2))
",True
"Initially, event2 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened and that it is the case that event2 is happened will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (X ((state=event1) & (state=event2)))
",False
"Initially, event2 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened is not true will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (G (! (state=event1)))
",True
"Initially, event2 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that the case of that it is the case that event1 is happened and that it is the case that event1 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (! ((state=event1) & (state=event1)))
",True
"Initially, event2 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of the case of that it is the case that event2 is happened is not true or that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((! (state=event2)) | (state=event1))
",False
"Initially, event1 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that the case of that it is the case that event2 is happened implies that it is the case that event1 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (! ((state=event2) -> (state=event1)))
",False
"Initially, event1 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will happen at next time will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (X (X (state=event1)))
",True
"Initially, event1 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened or the case of that it is the case that event2 is happened or that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) | ((state=event2) | (state=event2)))
",False
"Initially, event2 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened and that it is the case that event2 is happened will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (G ((state=event1) & (state=event2)))
",False
"Initially, event2 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened implies that it is the case that event2 is happened will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (X ((state=event1) -> (state=event2)))
",True
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will always happen at any future time will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (F (G (state=event1)))
",True
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened or that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) | (state=event2))
",False
"Initially, event2 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will always happen at any future time will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (F (G (state=event1)))
",True
"Initially, event1 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened and the case of that it is the case that event1 is happened implies that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) & ((state=event1) -> (state=event2)))
",False
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened implies the case of that it is the case that event2 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event2) -> (! (state=event2)))
",True
"Initially, event2 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened or that it is the case that event2 is happened will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (G ((state=event2) | (state=event2)))
",False
"Initially, event2 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of the case of that it is the case that event2 is happened and that it is the case that event2 is happened implies that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (((state=event2) & (state=event2)) -> (state=event1))
",False
"Initially, event1 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened and that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) & (state=event2))
",False
"Initially, event1 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of the case of that it is the case that event2 is happened or that it is the case that event2 is happened implies that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (((state=event2) | (state=event2)) -> (state=event2))
",True
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened implies the case of that it is the case that event2 is happened implies that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) -> ((state=event2) -> (state=event1)))
",True
"Initially, event2 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will happen at next time will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (G (X (state=event1)))
",True
"Initially, event1 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened implies that it is the case that event1 is happened will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (X ((state=event1) -> (state=event1)))
",True
"Initially, event2 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of the case of that it is the case that event2 is happened implies that it is the case that event2 is happened implies that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (((state=event2) -> (state=event2)) -> (state=event1))
",False
"Initially, event1 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened and that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event1) & (state=event2))
",False
"Initially, event2 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened and the case of that it is the case that event1 is happened implies that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event1) & ((state=event1) -> (state=event2)))
",False
"Initially, event2 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that the case of that it is the case that event1 is happened and that it is the case that event2 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (! ((state=event1) & (state=event2)))
",True
"Initially, event2 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened implies that it is the case that event2 is happened will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (G ((state=event1) -> (state=event2)))
",False
"Initially, event1 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened implies that it is the case that event1 is happened will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (F ((state=event1) -> (state=event1)))
",True
"Initially, event1 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened and that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event1) & (state=event2))
",False
"Initially, event2 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of event2 will always happen at any future time implies that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((G (state=event2)) -> (state=event1))
",False
"Initially, event2 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will always happen at any future time will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (G (G (state=event1)))
",False
"Initially, event1 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that the case of that it is the case that event1 is happened is not true is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (! (! (state=event1)))
",True
"Initially, event2 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened and that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) & (state=event2))
",False
"Initially, event1 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened and that it is the case that event2 is happened will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (F ((state=event2) & (state=event2)))
",False
"Initially, event1 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will happen at next time will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (X (X (state=event2)))
",False
"Initially, event2 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of the case of that it is the case that event1 is happened is not true implies that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((! (state=event1)) -> (state=event1))
",False
"Initially, event2 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened and that it is the case that event1 is happened will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (G ((state=event2) & (state=event1)))
",False
"Initially, event1 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened and the case of that it is the case that event1 is happened implies that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event1) & ((state=event1) -> (state=event1)))
",True
"Initially, event1 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of the case of that it is the case that event2 is happened and that it is the case that event2 is happened and that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (((state=event2) & (state=event2)) & (state=event1))
",False
"Initially, event2 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened and that it is the case that event2 is happened will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (G ((state=event2) & (state=event2)))
",True
"Initially, event2 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that event1 will happen at next time is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (! (X (state=event1)))
",True
"Initially, event2 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will happen eventually will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (G (F (state=event2)))
",False
"Initially, event1 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that the case of that it is the case that event2 is happened and that it is the case that event1 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (! ((state=event2) & (state=event1)))
",True
"Initially, event2 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened implies the case of that it is the case that event1 is happened and that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event2) -> ((state=event1) & (state=event1)))
",False
"Initially, event2 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that event1 will happen at next time is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (! (X (state=event1)))
",True
"Initially, event2 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of the case of that it is the case that event2 is happened is not true or that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((! (state=event2)) | (state=event2))
",True
"Initially, event2 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened and that it is the case that event1 is happened will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (F ((state=event1) & (state=event1)))
",False
"Initially, event1 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened or the case of that it is the case that event2 is happened and that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event2) | ((state=event2) & (state=event1)))
",False
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened is not true will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (F (! (state=event2)))
",True
"Initially, event2 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened and the case of that it is the case that event2 is happened or that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) & ((state=event2) | (state=event1)))
",False
"Initially, event2 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that event2 will happen at next time is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (! (X (state=event2)))
",True
"Initially, event1 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that the case of that it is the case that event2 is happened or that it is the case that event1 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (! ((state=event2) | (state=event1)))
",False
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that event2 will always happen at any future time is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (! (G (state=event2)))
",True
"Initially, event1 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened implies that it is the case that event1 is happened will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (F ((state=event1) -> (state=event1)))
",True
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of the case of that it is the case that event2 is happened is not true and that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((! (state=event2)) & (state=event1))
",True
"Initially, event2 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened or the case of that it is the case that event2 is happened or that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) | ((state=event2) | (state=event2)))
",True
"Initially, event1 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened or that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event1) | (state=event2))
",True
"Initially, event1 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened or event2 will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) | (X (state=event2)))
",True
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will always happen at any future time will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (G (G (state=event2)))
",False
"Initially, event1 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened is not true will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (X (! (state=event1)))
",True
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened or event1 will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event2) | (F (state=event1)))
",True
"Initially, event2 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened and that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) & (state=event2))
",False
"Initially, event2 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened and event2 will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) & (X (state=event2)))
",False
"Initially, event1 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will happen at next time will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (F (X (state=event1)))
",False
"Initially, event2 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of the case of that it is the case that event2 is happened is not true implies that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((! (state=event2)) -> (state=event1))
",True
"Initially, event2 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will happen at next time will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (F (X (state=event2)))
",True
"Initially, event2 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will always happen at any future time will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (X (G (state=event1)))
",False
"Initially, event1 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened or that it is the case that event2 is happened will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (X ((state=event1) | (state=event2)))
",True
"Initially, event1 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of the case of that it is the case that event2 is happened or that it is the case that event1 is happened implies that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (((state=event2) | (state=event1)) -> (state=event2))
",False
"Initially, event1 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened or that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event2) | (state=event1))
",True
"Initially, event2 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that the case of that it is the case that event1 is happened and that it is the case that event1 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (! ((state=event1) & (state=event1)))
",True
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened or that it is the case that event1 is happened will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (G ((state=event2) | (state=event1)))
",True
"Initially, event1 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened and the case of that it is the case that event1 is happened implies that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event1) & ((state=event1) -> (state=event1)))
",True
"Initially, event2 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened and that it is the case that event2 is happened will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (G ((state=event1) & (state=event2)))
",False
"Initially, event2 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened or the case of that it is the case that event1 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) | (! (state=event1)))
",True
"Initially, event2 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened and that it is the case that event2 is happened will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (G ((state=event2) & (state=event2)))
",False
"Initially, event2 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened implies that it is the case that event2 is happened will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (G ((state=event1) -> (state=event2)))
",True
"Initially, event2 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of the case of that it is the case that event2 is happened and that it is the case that event2 is happened implies that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (((state=event2) & (state=event2)) -> (state=event2))
",True
"Initially, event1 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened is not true will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (X (! (state=event1)))
",False
"Initially, event2 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of the case of that it is the case that event2 is happened and that it is the case that event2 is happened or that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (((state=event2) & (state=event2)) | (state=event2))
",True
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that the case of that it is the case that event2 is happened and that it is the case that event2 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (! ((state=event2) & (state=event2)))
",True
"Initially, event2 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will always happen at any future time will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (X (G (state=event2)))
",True
"Initially, event1 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened and that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event2) & (state=event2))
",False
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that event1 will happen at next time is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (! (X (state=event1)))
",True
"Initially, event1 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened and the case of that it is the case that event2 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) & (! (state=event2)))
",True
"Initially, event2 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will happen at next time will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (G (X (state=event1)))
",False
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will happen eventually will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (F (F (state=event1)))
",True
"Initially, event2 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that event1 will happen eventually is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (! (F (state=event1)))
",True
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened implies that it is the case that event1 is happened will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (G ((state=event1) -> (state=event1)))
",True
"Initially, event2 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that event2 will happen at next time is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (! (X (state=event2)))
",False
"Initially, event2 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened and that it is the case that event2 is happened will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (F ((state=event2) & (state=event2)))
",True
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened implies event1 will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) -> (X (state=event1)))
",True
"Initially, event2 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened implies the case of that it is the case that event1 is happened implies that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event2) -> ((state=event1) -> (state=event1)))
",True
"Initially, event2 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened and that it is the case that event2 is happened will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (F ((state=event1) & (state=event2)))
",False
"Initially, event1 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of the case of that it is the case that event2 is happened is not true and that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((! (state=event2)) & (state=event2))
",False
"Initially, event1 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that the case of that it is the case that event1 is happened or that it is the case that event1 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (! ((state=event1) | (state=event1)))
",False
"Initially, event2 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened and the case of that it is the case that event2 is happened and that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) & ((state=event2) & (state=event1)))
",False
"Initially, event2 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened is not true will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (X (! (state=event1)))
",True
"Initially, event1 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that event1 will always happen at any future time is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (! (G (state=event1)))
",False
"Initially, event2 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened is not true will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (F (! (state=event2)))
",True
"Initially, event1 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened is not true will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (G (! (state=event2)))
",True
"Initially, event2 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened or the case of that it is the case that event2 is happened or that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event2) | ((state=event2) | (state=event2)))
",True
"Initially, event2 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened and the case of that it is the case that event1 is happened or that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event1) & ((state=event1) | (state=event1)))
",False
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened is not true will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (F (! (state=event2)))
",True
"Initially, event1 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will happen at next time will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (G (X (state=event1)))
",True
"Initially, event1 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will happen at next time will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (X (X (state=event1)))
",False
"Initially, event2 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened or the case of that it is the case that event1 is happened or that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event2) | ((state=event1) | (state=event1)))
",True
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will happen at next time will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (F (X (state=event2)))
",True
"Initially, event1 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened and that it is the case that event2 is happened will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (X ((state=event2) & (state=event2)))
",True
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of event1 will always happen at any future time or that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((G (state=event1)) | (state=event1))
",True
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of the case of that it is the case that event1 is happened and that it is the case that event2 is happened or that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (((state=event1) & (state=event2)) | (state=event1))
",True
"Initially, event2 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened and that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event1) & (state=event2))
",False
"Initially, event2 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that event2 will happen eventually is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (! (F (state=event2)))
",False
"Initially, event2 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened or that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event1) | (state=event2))
",True
"Initially, event2 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened and the case of that it is the case that event1 is happened and that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event1) & ((state=event1) & (state=event2)))
",False
"Initially, event1 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that the case of that it is the case that event1 is happened and that it is the case that event1 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (! ((state=event1) & (state=event1)))
",False
"Initially, event1 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will happen at next time will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (X (X (state=event1)))
",True
"Initially, event2 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened or that it is the case that event1 is happened will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (F ((state=event2) | (state=event1)))
",True
"Initially, event1 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened or the case of that it is the case that event1 is happened or that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) | ((state=event1) | (state=event1)))
",True
"Initially, event2 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will always happen at any future time will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (X (G (state=event1)))
",False
"Initially, event1 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened implies that it is the case that event1 is happened will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (F ((state=event2) -> (state=event1)))
",True
"Initially, event1 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened or that it is the case that event2 is happened will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (X ((state=event1) | (state=event2)))
",True
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened implies that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event1) -> (state=event2))
",False
"Initially, event2 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened or that it is the case that event1 is happened will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (F ((state=event2) | (state=event1)))
",True
"Initially, event1 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened and that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event2) & (state=event1))
",False
"Initially, event1 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened implies event2 will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event1) -> (X (state=event2)))
",True
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will always happen at any future time will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (G (G (state=event1)))
",False
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened and the case of that it is the case that event1 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event2) & (! (state=event1)))
",False
"Initially, event2 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened or that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event1) | (state=event2))
",True
"Initially, event2 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened or the case of that it is the case that event2 is happened or that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event1) | ((state=event2) | (state=event2)))
",True
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened implies that it is the case that event2 is happened will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (X ((state=event1) -> (state=event2)))
",False
"Initially, event2 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of event1 will always happen at any future time or that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((G (state=event1)) | (state=event1))
",False
"Initially, event2 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened and that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event1) & (state=event2))
",False
"Initially, event2 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened or the case of that it is the case that event1 is happened implies that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event1) | ((state=event1) -> (state=event2)))
",True
"Initially, event2 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened or that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event1) | (state=event1))
",False
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened and that it is the case that event1 is happened will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (F ((state=event1) & (state=event1)))
",True
"Initially, event2 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of the case of that it is the case that event1 is happened or that it is the case that event1 is happened and that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (((state=event1) | (state=event1)) & (state=event2))
",False
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened and event2 will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) & (X (state=event2)))
",False
"Initially, event2 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened implies that it is the case that event2 is happened will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (F ((state=event2) -> (state=event2)))
",True
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened and the case of that it is the case that event1 is happened and that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event2) & ((state=event1) & (state=event2)))
",False
"Initially, event1 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened and event2 will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) & (F (state=event2)))
",False
"Initially, event1 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that the case of that it is the case that event1 is happened or that it is the case that event2 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (! ((state=event1) | (state=event2)))
",False
"Initially, event1 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of the case of that it is the case that event1 is happened or that it is the case that event2 is happened and that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (((state=event1) | (state=event2)) & (state=event2))
",False
"Initially, event2 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened and the case of that it is the case that event2 is happened or that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) & ((state=event2) | (state=event1)))
",True
"Initially, event1 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened or that it is the case that event1 is happened will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (G ((state=event1) | (state=event1)))
",True
"Initially, event2 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened implies that it is the case that event1 is happened will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (X ((state=event2) -> (state=event1)))
",True
"Initially, event2 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened or that it is the case that event1 is happened will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (F ((state=event1) | (state=event1)))
",False
"Initially, event2 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened implies that it is the case that event1 is happened will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (F ((state=event2) -> (state=event1)))
",False
"Initially, event1 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened or event1 will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) | (G (state=event1)))
",True
"Initially, event2 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will happen at next time will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (G (X (state=event2)))
",False
"Initially, event2 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened and that it is the case that event1 is happened will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (G ((state=event1) & (state=event1)))
",False
"Initially, event2 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that event1 will happen eventually is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (! (F (state=event1)))
",False
"Initially, event2 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened or that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event2) | (state=event2))
",True
"Initially, event1 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will happen eventually will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (G (F (state=event1)))
",False
"Initially, event1 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of event2 will always happen at any future time implies that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((G (state=event2)) -> (state=event2))
",True
"Initially, event2 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of the case of that it is the case that event2 is happened is not true implies that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((! (state=event2)) -> (state=event1))
",True
"Initially, event1 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened and that it is the case that event1 is happened will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (X ((state=event2) & (state=event1)))
",False
"Initially, event2 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened and that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event1) & (state=event2))
",False
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened implies that it is the case that event1 is happened will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (F ((state=event2) -> (state=event1)))
",True
"Initially, event1 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will happen eventually will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (F (F (state=event1)))
",True
"Initially, event2 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will always happen at any future time will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (F (G (state=event1)))
",False
"Initially, event1 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will always happen at any future time will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (F (G (state=event1)))
",True
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of the case of that it is the case that event1 is happened is not true and that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((! (state=event1)) & (state=event1))
",False
"Initially, event2 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened implies that it is the case that event2 is happened will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (X ((state=event1) -> (state=event2)))
",True
"Initially, event2 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened implies that it is the case that event1 is happened will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (X ((state=event2) -> (state=event1)))
",False
"Initially, event1 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened implies that it is the case that event1 is happened will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (F ((state=event1) -> (state=event1)))
",True
"Initially, event2 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened or that it is the case that event2 is happened will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (X ((state=event1) | (state=event2)))
",True
"Initially, event1 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened implies that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event2) -> (state=event1))
",True
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened is not true will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (G (! (state=event2)))
",True
"Initially, event2 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened implies that it is the case that event2 is happened will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (X ((state=event2) -> (state=event2)))
",True
"Initially, event1 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that event1 will happen at next time is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (! (X (state=event1)))
",False
"Initially, event2 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will happen at next time will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (F (X (state=event2)))
",False
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened implies event2 will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event2) -> (G (state=event2)))
",True
"Initially, event2 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened implies that it is the case that event2 is happened will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (F ((state=event1) -> (state=event2)))
",True
"Initially, event2 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened or the case of that it is the case that event2 is happened or that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event1) | ((state=event2) | (state=event1)))
",True
"Initially, event1 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that event2 will always happen at any future time is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (! (G (state=event2)))
",True
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened and the case of that it is the case that event2 is happened or that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) & ((state=event2) | (state=event1)))
",True
"Initially, event2 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened or that it is the case that event1 is happened will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (G ((state=event1) | (state=event1)))
",False
"Initially, event1 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened implies the case of that it is the case that event1 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event1) -> (! (state=event1)))
",False
"Initially, event2 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened and that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event2) & (state=event2))
",True
"Initially, event1 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will happen eventually will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (G (F (state=event2)))
",False
"Initially, event1 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened or that it is the case that event1 is happened will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (F ((state=event1) | (state=event1)))
",True
"Initially, event2 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened and that it is the case that event1 is happened will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (X ((state=event2) & (state=event1)))
",False
"Initially, event2 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that event1 will always happen at any future time is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (! (G (state=event1)))
",True
"Initially, event2 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened and that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event1) & (state=event2))
",False
"Initially, event1 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened or that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event2) | (state=event1))
",True
"Initially, event2 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will happen eventually will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (X (F (state=event1)))
",True
"Initially, event2 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that event1 will always happen at any future time is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (! (G (state=event1)))
",True
"Initially, event2 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will happen at next time will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (G (X (state=event2)))
",False
"Initially, event2 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened or that it is the case that event2 is happened will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (F ((state=event2) | (state=event2)))
",True
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened is not true will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (G (! (state=event2)))
",True
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that event2 will happen eventually is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (! (F (state=event2)))
",True
"Initially, event1 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened implies that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event1) -> (state=event1))
",True
"Initially, event2 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of the case of that it is the case that event1 is happened and that it is the case that event2 is happened or that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (((state=event1) & (state=event2)) | (state=event2))
",True
"Initially, event2 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened or that it is the case that event1 is happened will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (F ((state=event1) | (state=event1)))
",False
"Initially, event2 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that event1 will always happen at any future time is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (! (G (state=event1)))
",True
"Initially, event2 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened or that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) | (state=event1))
",False
"Initially, event1 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened and that it is the case that event1 is happened will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (X ((state=event1) & (state=event1)))
",False
"Initially, event1 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will always happen at any future time will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (X (G (state=event2)))
",False
"Initially, event2 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will happen at next time will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (X (X (state=event1)))
",True
"Initially, event1 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened or that it is the case that event2 is happened will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (X ((state=event1) | (state=event2)))
",True
"Initially, event1 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened or event2 will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event2) | (X (state=event2)))
",True
"Initially, event1 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened implies the case of that it is the case that event2 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) -> (! (state=event2)))
",True
"Initially, event1 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened and the case of that it is the case that event2 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) & (! (state=event2)))
",True
"Initially, event2 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened and that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event1) & (state=event1))
",False
"Initially, event2 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of the case of that it is the case that event2 is happened or that it is the case that event1 is happened and that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (((state=event2) | (state=event1)) & (state=event1))
",False
"Initially, event2 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened and the case of that it is the case that event2 is happened or that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event2) & ((state=event2) | (state=event2)))
",True
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened and event1 will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) & (F (state=event1)))
",False
"Initially, event2 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened and that it is the case that event2 is happened will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (G ((state=event1) & (state=event2)))
",False
"Initially, event2 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened or event2 will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) | (X (state=event2)))
",True
"Initially, event2 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened and the case of that it is the case that event2 is happened or that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event1) & ((state=event2) | (state=event2)))
",False
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened and that it is the case that event1 is happened will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (X ((state=event2) & (state=event1)))
",False
"Initially, event2 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will always happen at any future time will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (F (G (state=event2)))
",True
"Initially, event2 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that event1 will happen at next time is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (! (X (state=event1)))
",False
"Initially, event2 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of the case of that it is the case that event1 is happened implies that it is the case that event2 is happened implies that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (((state=event1) -> (state=event2)) -> (state=event2))
",True
"Initially, event2 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will happen at next time will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (F (X (state=event1)))
",False
"Initially, event2 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will always happen at any future time will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (X (G (state=event1)))
",False
"Initially, event1 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that event1 will always happen at any future time is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (! (G (state=event1)))
",True
"Initially, event1 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened is not true will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (G (! (state=event1)))
",False
"Initially, event1 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened is not true will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (F (! (state=event1)))
",True
"Initially, event2 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will happen eventually will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (F (F (state=event2)))
",True
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened or event2 will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) | (F (state=event2)))
",False
"Initially, event2 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened is not true will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (X (! (state=event2)))
",False
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will happen at next time will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (X (X (state=event1)))
",True
"Initially, event1 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened and event1 will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event1) & (X (state=event1)))
",True
"Initially, event2 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of event2 will happen eventually or that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((F (state=event2)) | (state=event1))
",True
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened implies event1 will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) -> (F (state=event1)))
",True
"Initially, event2 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of event2 will always happen at any future time and that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((G (state=event2)) & (state=event1))
",False
"Initially, event1 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will always happen at any future time will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (G (G (state=event1)))
",False
"Initially, event2 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened and that it is the case that event2 is happened will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (F ((state=event2) & (state=event2)))
",True
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that the case of that it is the case that event2 is happened is not true is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (! (! (state=event2)))
",False
"Initially, event2 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened and that it is the case that event1 is happened will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (G ((state=event2) & (state=event1)))
",False
"Initially, event1 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will happen eventually will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (G (F (state=event1)))
",True
"Initially, event2 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that event1 will happen eventually is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (! (F (state=event1)))
",True
"Initially, event2 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened and that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event1) & (state=event1))
",False
"Initially, event1 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened is not true will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (G (! (state=event1)))
",False
"Initially, event1 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will happen eventually will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (F (F (state=event2)))
",False
"Initially, event2 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will always happen at any future time will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (F (G (state=event2)))
",True
"Initially, event2 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened implies event1 will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event1) -> (G (state=event1)))
",True
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will happen at next time will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (X (X (state=event1)))
",True
"Initially, event2 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened and that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event1) & (state=event2))
",False
"Initially, event1 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of the case of that it is the case that event1 is happened implies that it is the case that event2 is happened implies that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (((state=event1) -> (state=event2)) -> (state=event1))
",True
"Initially, event2 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened or that it is the case that event1 is happened will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (X ((state=event1) | (state=event1)))
",False
"Initially, event1 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened implies that it is the case that event1 is happened will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (X ((state=event2) -> (state=event1)))
",True
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened or event1 will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event2) | (F (state=event1)))
",True
"Initially, event2 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened and that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) & (state=event1))
",False
"Initially, event2 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened is not true will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (X (! (state=event1)))
",True
"Initially, event2 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of the case of that it is the case that event1 is happened implies that it is the case that event2 is happened implies that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (((state=event1) -> (state=event2)) -> (state=event2))
",True
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will happen at next time will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (X (X (state=event2)))
",False
"Initially, event1 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will happen at next time will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (F (X (state=event2)))
",True
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened and event1 will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event1) & (F (state=event1)))
",True
"Initially, event1 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will happen at next time will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (F (X (state=event1)))
",True
"Initially, event2 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened or that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) | (state=event1))
",True
"Initially, event1 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened or that it is the case that event1 is happened will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (X ((state=event1) | (state=event1)))
",False
"Initially, event2 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened or that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) | (state=event1))
",True
"Initially, event2 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened and event2 will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event2) & (X (state=event2)))
",False
"Initially, event2 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened implies the case of that it is the case that event2 is happened implies that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event2) -> ((state=event2) -> (state=event2)))
",True
"Initially, event2 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that the case of that it is the case that event1 is happened is not true is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (! (! (state=event1)))
",False
"Initially, event1 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened or event1 will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event1) | (F (state=event1)))
",True
"Initially, event1 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of the case of that it is the case that event2 is happened implies that it is the case that event2 is happened or that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (((state=event2) -> (state=event2)) | (state=event2))
",True
"Initially, event2 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened is not true will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (X (! (state=event2)))
",False
"Initially, event2 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will happen eventually will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (X (F (state=event2)))
",True
"Initially, event1 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened and the case of that it is the case that event1 is happened and that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event2) & ((state=event1) & (state=event2)))
",False
"Initially, event2 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will happen eventually will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (X (F (state=event1)))
",True
"Initially, event2 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will always happen at any future time will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (X (G (state=event2)))
",False
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened or that it is the case that event2 is happened will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (F ((state=event1) | (state=event2)))
",True
"Initially, event2 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened or event1 will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) | (G (state=event1)))
",True
"Initially, event2 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of the case of that it is the case that event2 is happened or that it is the case that event2 is happened implies that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (((state=event2) | (state=event2)) -> (state=event2))
",True
"Initially, event2 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened implies the case of that it is the case that event1 is happened implies that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) -> ((state=event1) -> (state=event1)))
",True
"Initially, event1 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened or the case of that it is the case that event2 is happened and that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event2) | ((state=event2) & (state=event2)))
",False
"Initially, event2 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of the case of that it is the case that event1 is happened implies that it is the case that event1 is happened implies that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (((state=event1) -> (state=event1)) -> (state=event1))
",False
"Initially, event2 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of event2 will happen eventually implies that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((F (state=event2)) -> (state=event2))
",True
"Initially, event2 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened is not true will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (G (! (state=event2)))
",False
"Initially, event2 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will happen at next time will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (X (X (state=event2)))
",True
"Initially, event1 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that the case of that it is the case that event1 is happened or that it is the case that event1 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (! ((state=event1) | (state=event1)))
",False
"Initially, event2 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened and the case of that it is the case that event1 is happened or that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event2) & ((state=event1) | (state=event1)))
",False
"Initially, event1 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that the case of that it is the case that event2 is happened implies that it is the case that event1 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (! ((state=event2) -> (state=event1)))
",False
"Initially, event2 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened and that it is the case that event1 is happened will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (X ((state=event1) & (state=event1)))
",False
"Initially, event1 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened is not true will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (F (! (state=event2)))
",True
"Initially, event2 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will always happen at any future time will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (G (G (state=event1)))
",False
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened and that it is the case that event2 is happened will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (G ((state=event1) & (state=event2)))
",False
"Initially, event1 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that event2 will happen at next time is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (! (X (state=event2)))
",True
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will happen at next time will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (X (X (state=event1)))
",True
"Initially, event2 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will happen eventually will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (F (F (state=event1)))
",False
"Initially, event2 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of the case of that it is the case that event2 is happened is not true and that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((! (state=event2)) & (state=event2))
",False
"Initially, event1 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened is not true will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (X (! (state=event2)))
",False
"Initially, event2 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will happen eventually will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (X (F (state=event1)))
",True
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that event1 will always happen at any future time is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (! (G (state=event1)))
",False
"Initially, event2 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will happen at next time will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (F (X (state=event1)))
",True
"Initially, event2 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that event2 will always happen at any future time is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (! (G (state=event2)))
",True
"Initially, event2 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened is not true will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (X (! (state=event2)))
",False
"Initially, event1 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened or event1 will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event1) | (X (state=event1)))
",True
"Initially, event2 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened is not true will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (X (! (state=event2)))
",True
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened and that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) & (state=event1))
",False
"Initially, event1 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened and that it is the case that event1 is happened will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (F ((state=event1) & (state=event1)))
",True
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened implies that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((state=event1) -> (state=event2))
",False
"Initially, event1 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will always happen at any future time will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (F (G (state=event1)))
",True
"Initially, event1 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened or the case of that it is the case that event1 is happened or that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) | ((state=event1) | (state=event1)))
",True
"Initially, event2 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened is not true will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (G (! (state=event1)))
",False
"Initially, event2 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that the case of that it is the case that event2 is happened or that it is the case that event1 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (! ((state=event2) | (state=event1)))
",False
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that event1 will always happen at any future time is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (! (G (state=event1)))
",False
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will happen eventually will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (F (F (state=event2)))
",True
"Initially, event2 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened implies the case of that it is the case that event1 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) -> (! (state=event1)))
",True
"Initially, event2 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened and that it is the case that event1 is happened will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (F ((state=event2) & (state=event1)))
",False
"Initially, event1 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened implies the case of that it is the case that event2 is happened or that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event1) -> ((state=event2) | (state=event1)))
",True
"Initially, event2 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of event1 will always happen at any future time and that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC ((G (state=event1)) & (state=event2))
",False
"Initially, event2 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that event1 will always happen at any future time is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (! (G (state=event1)))
",True
"Initially, event1 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will happen eventually will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (G (F (state=event2)))
",True
"Initially, event2 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened or the case of that it is the case that event1 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) | (! (state=event1)))
",True
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will happen at next time will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (F (X (state=event1)))
",True
"Initially, event2 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened or the case of that it is the case that event1 is happened or that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event2) | ((state=event1) | (state=event1)))
",True
"Initially, event2 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened and that it is the case that event2 is happened will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (X ((state=event1) & (state=event2)))
",False
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will happen at next time will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (G (X (state=event2)))
",False
"Initially, event2 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that the case of that it is the case that event1 is happened is not true is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (! (! (state=event1)))
",False
"Initially, event1 is happened. After event1, event2 will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened implies the case of that it is the case that event2 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) -> (! (state=event2)))
",True
"Initially, event2 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened or the case of that it is the case that event2 is happened and that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) | ((state=event2) & (state=event1)))
",True
"Initially, event1 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will happen at next time will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (F (X (state=event1)))
",True
"Initially, event1 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened is not true will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (X (! (state=event2)))
",True
"Initially, event1 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened implies that it is the case that event1 is happened will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (X ((state=event2) -> (state=event1)))
",True
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will always happen at any future time will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (X (G (state=event2)))
",False
"Initially, event1 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened implies that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event2) -> (state=event1))
",True
"Initially, event2 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened and that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event2) & (state=event1))
",False
"Initially, event2 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that the case of that it is the case that event1 is happened is not true is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (! (! (state=event1)))
",False
"Initially, event2 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that the case of that it is the case that event1 is happened or that it is the case that event1 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (! ((state=event1) | (state=event1)))
",True
"Initially, event1 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that event2 will happen at next time is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (! (X (state=event2)))
",True
"Initially, event2 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened implies that it is the case that event1 is happened will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (X ((state=event1) -> (state=event1)))
",True
"Initially, event1 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened and the case of that it is the case that event2 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) & (! (state=event2)))
",True
"Initially, event2 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will always happen at any future time will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (G (G (state=event1)))
",False
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event2 is happened implies that it is the case that event1 is happened will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (G ((state=event2) -> (state=event1)))
",False
"Initially, event1 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that the case of that it is the case that event1 is happened or that it is the case that event2 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (! ((state=event1) | (state=event2)))
",False
"Initially, event1 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened or that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event2) | (state=event1))
",True
"Initially, event2 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will happen at next time will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (F (X (state=event1)))
",False
"Initially, event2 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened implies that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) -> (state=event1))
",False
"Initially, event1 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened and that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) & (state=event1))
",False
"Initially, event2 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened implies that it is the case that event2 is happened will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (X ((state=event1) -> (state=event2)))
",True
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that event1 will always happen at any future time is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (! (G (state=event1)))
",True
"Initially, event2 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will happen eventually will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (X (F (state=event2)))
",True
"Initially, event2 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened and the case of that it is the case that event1 is happened and that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) & ((state=event1) & (state=event1)))
",False
"Initially, event2 is happened. After Event event2, no other events will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened implies the case of that it is the case that event1 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) -> (! (state=event1)))
",True
"Initially, event2 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened implies that it is the case that event1 is happened will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (G ((state=event1) -> (state=event1)))
",True
"Initially, event2 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that the case of that it is the case that event2 is happened implies that it is the case that event2 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (! ((state=event2) -> (state=event2)))
",False
"Initially, event1 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that the case of that it is the case that event1 is happened implies that it is the case that event2 is happened is not true.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (! ((state=event1) -> (state=event2)))
",True
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event1 is happened implies the case of that it is the case that event2 is happened or that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event1) -> ((state=event2) | (state=event1)))
",True
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened implies that it is the case that event2 is happened will always happen at any future time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC (G ((state=event1) -> (state=event2)))
",False
"Initially, event2 is happened. After event2, event1 will happen. After Event event1, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will happen at next time will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC (F (X (state=event2)))
",False
"Initially, event2 is happened. After Event event2, no other events will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that the case of that it is the case that event1 is happened is not true will happen eventually.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event2;
    esac;
LTLSPEC (F (! (state=event1)))
",True
"Initially, event1 is happened. After event1, event2 will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event1 will happen eventually will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (X (F (state=event1)))
",True
"Initially, event1 is happened. After Event event1, no other events will happen. After Event event2, no other events will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened and that it is the case that event2 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event1 : event1;
		state = event2 : event2;
    esac;
LTLSPEC ((state=event2) & (state=event2))
",False
"Initially, event1 is happened. After Event event1, no other events will happen. After event2, event1 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
The case of that it is the case that event2 is happened or that it is the case that event1 is happened.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event1;
    next(state) := case
        state = event2 : event1;
		state = event1 : event1;
    esac;
LTLSPEC ((state=event2) | (state=event1))
",True
"Initially, event2 is happened. After event2, event1 will happen. After event1, event2 will happen.","Determine whether the following statement is true or false (answering in ""true"" or ""false"" directly):
It is the case that event2 will happen eventually will happen at next time.","MODULE main
VAR
    state : {event1, event2};
ASSIGN
    init(state) := event2;
    next(state) := case
        state = event1 : event2;
		state = event2 : event1;
    esac;
LTLSPEC (X (F (state=event2)))
",True
